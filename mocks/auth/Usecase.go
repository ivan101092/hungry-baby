// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	auth "hungry-baby/businesses/auth"

	mock "github.com/stretchr/testify/mock"
)

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// GetGoogleLoginURL provides a mock function with given fields: ctx
func (_m *Usecase) GetGoogleLoginURL(ctx context.Context) (string, error) {
	ret := _m.Called(ctx)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyGoogleCode provides a mock function with given fields: ctx, code
func (_m *Usecase) VerifyGoogleCode(ctx context.Context, code string) (auth.Domain, error) {
	ret := _m.Called(ctx, code)

	var r0 auth.Domain
	if rf, ok := ret.Get(0).(func(context.Context, string) auth.Domain); ok {
		r0 = rf(ctx, code)
	} else {
		r0 = ret.Get(0).(auth.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
